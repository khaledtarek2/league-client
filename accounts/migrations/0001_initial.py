# Generated by Django 4.0.4 on 2022-05-23 02:21

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('champions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChampionOwnerShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid', models.IntegerField()),
                ('payment_currency', models.IntegerField(choices=[(0, 'Rp'), (1, 'Be')])),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeasonGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(choices=[(0, 'C Plus'), (1, 'B Minus'), (2, 'B'), (3, 'B Plus'), (4, 'A Minus'), (5, 'A'), (6, 'A Plus'), (7, 'S Minus'), (8, 'S'), (9, 'S Plus')])),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_icon', models.ImageField(upload_to='')),
                ('rank_border', models.ImageField(upload_to='')),
                ('rank_type', models.CharField(choices=[(0, 'Solo Duo'), (1, 'Flex'), (2, 'Tft')], default=0, max_length=1)),
                ('rank_level', models.CharField(choices=[('UNRANKED', 'Unranked'), ('IRON', 'Iron'), ('BRONZE', 'Bronze'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLAT', 'Plat'), ('DIAMOND', 'Diamond'), ('MASTER', 'Master'), ('GRANDMASTER', 'Grandmaster'), ('CHALENGER', 'Chalenger')], default='UNRANKED', max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='SkinOwnerShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid', models.IntegerField()),
                ('payment_currency', models.IntegerField(choices=[(0, 'Rp'), (1, 'Be')])),
                ('skin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='champions.championskin')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_pick', models.ImageField(upload_to='')),
                ('honor_level', models.IntegerField(default=2)),
                ('trophy', models.ImageField(upload_to='')),
                ('banner', models.ImageField(upload_to='')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.rank')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_online', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('player_pic', models.ImageField(upload_to='')),
                ('level', models.IntegerField(default=1)),
                ('server', models.CharField(max_length=100)),
                ('highest_rank', models.CharField(max_length=100)),
                ('friends', models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.profile')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
